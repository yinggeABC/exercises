MySql 默认端口号 3306
1. 登录mysql客户端  shell->mysql -uroot(username) -pxxxx(password) -P3306(portname) -h127.0.0.1(hostname)
2. MySQL常用指令  SELECT VERSION()显示服务器版本        SELECT NOW()显示当前日期  SELECT USER()显示当前用户
SELECT DATABASE()显示当前打开的数据库名称
3. SQL语句需要以分号结尾
4. 创建数据库   CREATE DATABASE [IF NOT EXISTS] db_name CHARACTER SET [=] charname
如果在创建过程中用[IF NOT EXISTS],若数据库已经存在，就显示warning，如果不用这个指令，则显示错误
SHOW WARNINGS 显示警告信息
5. SHOW DATABASES [LIKE “pattern"| where expr]  显示所有的数据库名称
6.SHOW CREATE DATABASE db_name 显示数据库创建时候的信息
7. 修改数据库  ALTER DATABASE db_name CHARACTER SET [=]charname
8. 删除数据库  DROP DATABASE [IF EXISTS] db_name
9.整数数据类型：
tinyint(1Byte)  smallint(2B) mediumint(3B) int(4B) bigint(8B)
10.浮点型
FLOAT     DOUBLE
11. 日期时间型(用的比较少，一般用数字类型取代)
YEAR       TIME    DATE   DATETIME     TIMESTAMP
12. 字符型
CHAR VARCHAR TEXT ENUM("val1","val2"....)
SET("val1","val2"...)
13. 设计数据表
CREATE TABLE [IF NOT EXISTS] table_name(column_name data_type,...)
SHOW TABLES FROM db_name; 显示表的参数
14. SHOW COLUMNS FROM table_name  显示表的字段值
     SHOW CREATE TABLE tb1
    INSERT [INTO] tbl_name [(col_name,..)] VALUES(val,...)  默认是给全部字段赋值
    SELECT expr,... FROM tbl_name  SELECT * FROM tbl_name查看全部记录
15. 自动编号，且必须与主键组合使用；默认情况下，起始值为1，每次增量为1； 而primary key不一定要和AUTO_INCREMENT一起使用
16. UNIQUE KEY不是PRIMARY KEY, UNIQUE KEY字段可以为NULL,而PRIMARY KEY 不可以 (NULL表示该字段值可以为空)
    唯一约束一张表可以存在多个，而主键约束一张表只能存在一个；
    UNIQUE KEY和PRIMARY KEY一样，都不能有两个相同的值
    e.g. CREATE tb1 (id SMALLINT PRIMARY KEY AUTO_INCREMENT, username VARCHAR(20) NOT NULL UNIQUE KEY,age TINYINT NULL UNIQUE KEY);
17. 默认约束   当插入记录时，如果没有明确给字段赋值，则自动赋予默认值
CREATE TABLE tb(
 username VARCHAR(20) DEFAULT "Lily")

 18.数据表操作： 插入记录   查找记录
    记录操作  创建数据表     约束的使用（PRIMARY KEY主键约束, UNIQUE KEY唯一约束, DEFAULT默认约束，NOT NULL非空约束,FOREIGN KEY外键)
    其他设置   数据类型  UNSIGNED AUTO_INCREMENT

 19.外键  实现一对一或者一对多的关系
 子表：有外键的表             父表： 被参考的表(需要先在父表中插入记录，才能在子表中插入记录）
 外键中的参照操作  在进行外键约束的创建操作后，在更新父表时，子表是否也进行操作 CASCADE(父表删除或更新，子表也删除或者更新相应记录） SET NULL（父表删除或更新，子表的字段设置为NULL，要保证子表的这个字段在创建时没有被设置为NOT NULL）
 RESTRICT不允许更新或者删除父表   NO ACTION 作用同RESTRICT
 e.g.  CREATE TABLE tb1(
 pid SMALLINT,
 FOREIGN KEY (pid) REFERENCES tb2 (id) ON DELETE CASCADE
 );

 20. DELETE FROM tb1 WHERE ID=3  从表中删除某个记录
 21. 增加字段
     ALTER TABLE tb1 ADD [COLUMN] col_name col_def
     ALTER TABLE tb1 ADD (col_name col_def,col_name col_def...)
     ALTER TABLE tb1 DROP col_name
     ALTER TABLE tb1 DROP col_name, DROP col_name
 22. ALTER TABLE tb1 ADD [CONSTRAINT] PRIMARY KEY (index_col_name)
         ALTER TABLE tb1 DROP PRIMARY KEY;
         ALTER TABLE tb1 ADD [CONSTRAINT] UNIQUE KEY (col_name, col_name...)
         ALTER TABLE tb1 ADD [CONSTRAINT] FOREIGN KEY (col_name) REFERENCES tb2 (col_name)
         ALTER TABLE tb1 DROP FOREIGN KEY fk_symbol
         ALTER TABLE tb1 ALTER col_name SET DEFAULT val;
         ALTER TABLE tb1 ADD INDEX (col_name_list);
         ALTER TABLE tb1 DROP INDEX col_name;

 23. 修改数据表
         修改列定义   ALTER TABLE tbl_name MODIFY [COLUMN] col_name col_def [FIRST|AFTER col_name]可以修改类型、顺序等
         如果要修改字段名字 ALTER TABLE tb1_name CHANGE [COLUMN] oldname new name col_def [FIRST|AFTER col_name]既可以修改列定义，也可以修改列名称
         修改数据表名 ALTER TABLE tbl_name RENAME [TO|AS] new_tbname;
                    RENAME TABLE tbl_name TO new_tbname;
 24. 数据表索引
     如果没有索引，查询时mysql必须从第一个记录开始扫描整个表的所有记录，直至找到符合要求的记录。表里的记录越多，这个操作的代价就越高。
     如果在作为搜索的字段上创建索引，mysql无需扫描任何记录即可迅速得到目标记录的位置。如果索引
     SELECT * FROM tb1 WHERE name = 一个外部输入，当数据不多时，执行效果不错。随着数据量增加，执行起来就慢了。若在name上建立索引，
     ALTER TABLE tb1 ADD INDEX name,就可以提高查询速度了。





